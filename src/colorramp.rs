use crate::color_setting_t;
use std::ffi::{c_double, c_float, c_int};

static mut blackbody_color: [c_float; 726] = [
    1.00000000f64 as c_float,
    0.18172716f64 as c_float,
    0.00000000f64 as c_float,
    1.00000000f64 as c_float,
    0.25503671f64 as c_float,
    0.00000000f64 as c_float,
    1.00000000f64 as c_float,
    0.30942099f64 as c_float,
    0.00000000f64 as c_float,
    1.00000000f64 as c_float,
    0.35357379f64 as c_float,
    0.00000000f64 as c_float,
    1.00000000f64 as c_float,
    0.39091524f64 as c_float,
    0.00000000f64 as c_float,
    1.00000000f64 as c_float,
    0.42322816f64 as c_float,
    0.00000000f64 as c_float,
    1.00000000f64 as c_float,
    0.45159884f64 as c_float,
    0.00000000f64 as c_float,
    1.00000000f64 as c_float,
    0.47675916f64 as c_float,
    0.00000000f64 as c_float,
    1.00000000f64 as c_float,
    0.49923747f64 as c_float,
    0.00000000f64 as c_float,
    1.00000000f64 as c_float,
    0.51943421f64 as c_float,
    0.00000000f64 as c_float,
    1.00000000f64 as c_float,
    0.54360078f64 as c_float,
    0.08679949f64 as c_float,
    1.00000000f64 as c_float,
    0.56618736f64 as c_float,
    0.14065513f64 as c_float,
    1.00000000f64 as c_float,
    0.58734976f64 as c_float,
    0.18362641f64 as c_float,
    1.00000000f64 as c_float,
    0.60724493f64 as c_float,
    0.22137978f64 as c_float,
    1.00000000f64 as c_float,
    0.62600248f64 as c_float,
    0.25591950f64 as c_float,
    1.00000000f64 as c_float,
    0.64373109f64 as c_float,
    0.28819679f64 as c_float,
    1.00000000f64 as c_float,
    0.66052319f64 as c_float,
    0.31873863f64 as c_float,
    1.00000000f64 as c_float,
    0.67645822f64 as c_float,
    0.34786758f64 as c_float,
    1.00000000f64 as c_float,
    0.69160518f64 as c_float,
    0.37579588f64 as c_float,
    1.00000000f64 as c_float,
    0.70602449f64 as c_float,
    0.40267128f64 as c_float,
    1.00000000f64 as c_float,
    0.71976951f64 as c_float,
    0.42860152f64 as c_float,
    1.00000000f64 as c_float,
    0.73288760f64 as c_float,
    0.45366838f64 as c_float,
    1.00000000f64 as c_float,
    0.74542112f64 as c_float,
    0.47793608f64 as c_float,
    1.00000000f64 as c_float,
    0.75740814f64 as c_float,
    0.50145662f64 as c_float,
    1.00000000f64 as c_float,
    0.76888303f64 as c_float,
    0.52427322f64 as c_float,
    1.00000000f64 as c_float,
    0.77987699f64 as c_float,
    0.54642268f64 as c_float,
    1.00000000f64 as c_float,
    0.79041843f64 as c_float,
    0.56793692f64 as c_float,
    1.00000000f64 as c_float,
    0.80053332f64 as c_float,
    0.58884417f64 as c_float,
    1.00000000f64 as c_float,
    0.81024551f64 as c_float,
    0.60916971f64 as c_float,
    1.00000000f64 as c_float,
    0.81957693f64 as c_float,
    0.62893653f64 as c_float,
    1.00000000f64 as c_float,
    0.82854786f64 as c_float,
    0.64816570f64 as c_float,
    1.00000000f64 as c_float,
    0.83717703f64 as c_float,
    0.66687674f64 as c_float,
    1.00000000f64 as c_float,
    0.84548188f64 as c_float,
    0.68508786f64 as c_float,
    1.00000000f64 as c_float,
    0.85347859f64 as c_float,
    0.70281616f64 as c_float,
    1.00000000f64 as c_float,
    0.86118227f64 as c_float,
    0.72007777f64 as c_float,
    1.00000000f64 as c_float,
    0.86860704f64 as c_float,
    0.73688797f64 as c_float,
    1.00000000f64 as c_float,
    0.87576611f64 as c_float,
    0.75326132f64 as c_float,
    1.00000000f64 as c_float,
    0.88267187f64 as c_float,
    0.76921169f64 as c_float,
    1.00000000f64 as c_float,
    0.88933596f64 as c_float,
    0.78475236f64 as c_float,
    1.00000000f64 as c_float,
    0.89576933f64 as c_float,
    0.79989606f64 as c_float,
    1.00000000f64 as c_float,
    0.90198230f64 as c_float,
    0.81465502f64 as c_float,
    1.00000000f64 as c_float,
    0.90963069f64 as c_float,
    0.82838210f64 as c_float,
    1.00000000f64 as c_float,
    0.91710889f64 as c_float,
    0.84190889f64 as c_float,
    1.00000000f64 as c_float,
    0.92441842f64 as c_float,
    0.85523742f64 as c_float,
    1.00000000f64 as c_float,
    0.93156127f64 as c_float,
    0.86836903f64 as c_float,
    1.00000000f64 as c_float,
    0.93853986f64 as c_float,
    0.88130458f64 as c_float,
    1.00000000f64 as c_float,
    0.94535695f64 as c_float,
    0.89404470f64 as c_float,
    1.00000000f64 as c_float,
    0.95201559f64 as c_float,
    0.90658983f64 as c_float,
    1.00000000f64 as c_float,
    0.95851906f64 as c_float,
    0.91894041f64 as c_float,
    1.00000000f64 as c_float,
    0.96487079f64 as c_float,
    0.93109690f64 as c_float,
    1.00000000f64 as c_float,
    0.97107439f64 as c_float,
    0.94305985f64 as c_float,
    1.00000000f64 as c_float,
    0.97713351f64 as c_float,
    0.95482993f64 as c_float,
    1.00000000f64 as c_float,
    0.98305189f64 as c_float,
    0.96640795f64 as c_float,
    1.00000000f64 as c_float,
    0.98883326f64 as c_float,
    0.97779486f64 as c_float,
    1.00000000f64 as c_float,
    0.99448139f64 as c_float,
    0.98899179f64 as c_float,
    1.00000000f64 as c_float,
    1.00000000f64 as c_float,
    1.00000000f64 as c_float,
    0.98947904f64 as c_float,
    0.99348723f64 as c_float,
    1.00000000f64 as c_float,
    0.97940448f64 as c_float,
    0.98722715f64 as c_float,
    1.00000000f64 as c_float,
    0.96975025f64 as c_float,
    0.98120637f64 as c_float,
    1.00000000f64 as c_float,
    0.96049223f64 as c_float,
    0.97541240f64 as c_float,
    1.00000000f64 as c_float,
    0.95160805f64 as c_float,
    0.96983355f64 as c_float,
    1.00000000f64 as c_float,
    0.94303638f64 as c_float,
    0.96443333f64 as c_float,
    1.00000000f64 as c_float,
    0.93480451f64 as c_float,
    0.95923080f64 as c_float,
    1.00000000f64 as c_float,
    0.92689056f64 as c_float,
    0.95421394f64 as c_float,
    1.00000000f64 as c_float,
    0.91927697f64 as c_float,
    0.94937330f64 as c_float,
    1.00000000f64 as c_float,
    0.91194747f64 as c_float,
    0.94470005f64 as c_float,
    1.00000000f64 as c_float,
    0.90488690f64 as c_float,
    0.94018594f64 as c_float,
    1.00000000f64 as c_float,
    0.89808115f64 as c_float,
    0.93582323f64 as c_float,
    1.00000000f64 as c_float,
    0.89151710f64 as c_float,
    0.93160469f64 as c_float,
    1.00000000f64 as c_float,
    0.88518247f64 as c_float,
    0.92752354f64 as c_float,
    1.00000000f64 as c_float,
    0.87906581f64 as c_float,
    0.92357340f64 as c_float,
    1.00000000f64 as c_float,
    0.87315640f64 as c_float,
    0.91974827f64 as c_float,
    1.00000000f64 as c_float,
    0.86744421f64 as c_float,
    0.91604254f64 as c_float,
    1.00000000f64 as c_float,
    0.86191983f64 as c_float,
    0.91245088f64 as c_float,
    1.00000000f64 as c_float,
    0.85657444f64 as c_float,
    0.90896831f64 as c_float,
    1.00000000f64 as c_float,
    0.85139976f64 as c_float,
    0.90559011f64 as c_float,
    1.00000000f64 as c_float,
    0.84638799f64 as c_float,
    0.90231183f64 as c_float,
    1.00000000f64 as c_float,
    0.84153180f64 as c_float,
    0.89912926f64 as c_float,
    1.00000000f64 as c_float,
    0.83682430f64 as c_float,
    0.89603843f64 as c_float,
    1.00000000f64 as c_float,
    0.83225897f64 as c_float,
    0.89303558f64 as c_float,
    1.00000000f64 as c_float,
    0.82782969f64 as c_float,
    0.89011714f64 as c_float,
    1.00000000f64 as c_float,
    0.82353066f64 as c_float,
    0.88727974f64 as c_float,
    1.00000000f64 as c_float,
    0.81935641f64 as c_float,
    0.88452017f64 as c_float,
    1.00000000f64 as c_float,
    0.81530175f64 as c_float,
    0.88183541f64 as c_float,
    1.00000000f64 as c_float,
    0.81136180f64 as c_float,
    0.87922257f64 as c_float,
    1.00000000f64 as c_float,
    0.80753191f64 as c_float,
    0.87667891f64 as c_float,
    1.00000000f64 as c_float,
    0.80380769f64 as c_float,
    0.87420182f64 as c_float,
    1.00000000f64 as c_float,
    0.80018497f64 as c_float,
    0.87178882f64 as c_float,
    1.00000000f64 as c_float,
    0.79665980f64 as c_float,
    0.86943756f64 as c_float,
    1.00000000f64 as c_float,
    0.79322843f64 as c_float,
    0.86714579f64 as c_float,
    1.00000000f64 as c_float,
    0.78988728f64 as c_float,
    0.86491137f64 as c_float,
    1.00000000f64 as c_float,
    0.78663296f64 as c_float,
    0.86273225f64 as c_float,
    1.00000000f64 as c_float,
    0.78346225f64 as c_float,
    0.86060650f64 as c_float,
    1.00000000f64 as c_float,
    0.78037207f64 as c_float,
    0.85853224f64 as c_float,
    1.00000000f64 as c_float,
    0.77735950f64 as c_float,
    0.85650771f64 as c_float,
    1.00000000f64 as c_float,
    0.77442176f64 as c_float,
    0.85453121f64 as c_float,
    1.00000000f64 as c_float,
    0.77155617f64 as c_float,
    0.85260112f64 as c_float,
    1.00000000f64 as c_float,
    0.76876022f64 as c_float,
    0.85071588f64 as c_float,
    1.00000000f64 as c_float,
    0.76603147f64 as c_float,
    0.84887402f64 as c_float,
    1.00000000f64 as c_float,
    0.76336762f64 as c_float,
    0.84707411f64 as c_float,
    1.00000000f64 as c_float,
    0.76076645f64 as c_float,
    0.84531479f64 as c_float,
    1.00000000f64 as c_float,
    0.75822586f64 as c_float,
    0.84359476f64 as c_float,
    1.00000000f64 as c_float,
    0.75574383f64 as c_float,
    0.84191277f64 as c_float,
    1.00000000f64 as c_float,
    0.75331843f64 as c_float,
    0.84026762f64 as c_float,
    1.00000000f64 as c_float,
    0.75094780f64 as c_float,
    0.83865816f64 as c_float,
    1.00000000f64 as c_float,
    0.74863017f64 as c_float,
    0.83708329f64 as c_float,
    1.00000000f64 as c_float,
    0.74636386f64 as c_float,
    0.83554194f64 as c_float,
    1.00000000f64 as c_float,
    0.74414722f64 as c_float,
    0.83403311f64 as c_float,
    1.00000000f64 as c_float,
    0.74197871f64 as c_float,
    0.83255582f64 as c_float,
    1.00000000f64 as c_float,
    0.73985682f64 as c_float,
    0.83110912f64 as c_float,
    1.00000000f64 as c_float,
    0.73778012f64 as c_float,
    0.82969211f64 as c_float,
    1.00000000f64 as c_float,
    0.73574723f64 as c_float,
    0.82830393f64 as c_float,
    1.00000000f64 as c_float,
    0.73375683f64 as c_float,
    0.82694373f64 as c_float,
    1.00000000f64 as c_float,
    0.73180765f64 as c_float,
    0.82561071f64 as c_float,
    1.00000000f64 as c_float,
    0.72989845f64 as c_float,
    0.82430410f64 as c_float,
    1.00000000f64 as c_float,
    0.72802807f64 as c_float,
    0.82302316f64 as c_float,
    1.00000000f64 as c_float,
    0.72619537f64 as c_float,
    0.82176715f64 as c_float,
    1.00000000f64 as c_float,
    0.72439927f64 as c_float,
    0.82053539f64 as c_float,
    1.00000000f64 as c_float,
    0.72263872f64 as c_float,
    0.81932722f64 as c_float,
    1.00000000f64 as c_float,
    0.72091270f64 as c_float,
    0.81814197f64 as c_float,
    1.00000000f64 as c_float,
    0.71922025f64 as c_float,
    0.81697905f64 as c_float,
    1.00000000f64 as c_float,
    0.71756043f64 as c_float,
    0.81583783f64 as c_float,
    1.00000000f64 as c_float,
    0.71593234f64 as c_float,
    0.81471775f64 as c_float,
    1.00000000f64 as c_float,
    0.71433510f64 as c_float,
    0.81361825f64 as c_float,
    1.00000000f64 as c_float,
    0.71276788f64 as c_float,
    0.81253878f64 as c_float,
    1.00000000f64 as c_float,
    0.71122987f64 as c_float,
    0.81147883f64 as c_float,
    1.00000000f64 as c_float,
    0.70972029f64 as c_float,
    0.81043789f64 as c_float,
    1.00000000f64 as c_float,
    0.70823838f64 as c_float,
    0.80941546f64 as c_float,
    1.00000000f64 as c_float,
    0.70678342f64 as c_float,
    0.80841109f64 as c_float,
    1.00000000f64 as c_float,
    0.70535469f64 as c_float,
    0.80742432f64 as c_float,
    1.00000000f64 as c_float,
    0.70395153f64 as c_float,
    0.80645469f64 as c_float,
    1.00000000f64 as c_float,
    0.70257327f64 as c_float,
    0.80550180f64 as c_float,
    1.00000000f64 as c_float,
    0.70121928f64 as c_float,
    0.80456522f64 as c_float,
    1.00000000f64 as c_float,
    0.69988894f64 as c_float,
    0.80364455f64 as c_float,
    1.00000000f64 as c_float,
    0.69858167f64 as c_float,
    0.80273941f64 as c_float,
    1.00000000f64 as c_float,
    0.69729688f64 as c_float,
    0.80184943f64 as c_float,
    1.00000000f64 as c_float,
    0.69603402f64 as c_float,
    0.80097423f64 as c_float,
    1.00000000f64 as c_float,
    0.69479255f64 as c_float,
    0.80011347f64 as c_float,
    1.00000000f64 as c_float,
    0.69357196f64 as c_float,
    0.79926681f64 as c_float,
    1.00000000f64 as c_float,
    0.69237173f64 as c_float,
    0.79843391f64 as c_float,
    1.00000000f64 as c_float,
    0.69119138f64 as c_float,
    0.79761446f64 as c_float,
    1.00000000f64 as c_float,
    0.69003044f64 as c_float,
    0.79680814f64 as c_float,
    1.00000000f64 as c_float,
    0.68888844f64 as c_float,
    0.79601466f64 as c_float,
    1.00000000f64 as c_float,
    0.68776494f64 as c_float,
    0.79523371f64 as c_float,
    1.00000000f64 as c_float,
    0.68665951f64 as c_float,
    0.79446502f64 as c_float,
    1.00000000f64 as c_float,
    0.68557173f64 as c_float,
    0.79370830f64 as c_float,
    1.00000000f64 as c_float,
    0.68450119f64 as c_float,
    0.79296330f64 as c_float,
    1.00000000f64 as c_float,
    0.68344751f64 as c_float,
    0.79222975f64 as c_float,
    1.00000000f64 as c_float,
    0.68241029f64 as c_float,
    0.79150740f64 as c_float,
    1.00000000f64 as c_float,
    0.68138918f64 as c_float,
    0.79079600f64 as c_float,
    1.00000000f64 as c_float,
    0.68038380f64 as c_float,
    0.79009531f64 as c_float,
    1.00000000f64 as c_float,
    0.67939381f64 as c_float,
    0.78940511f64 as c_float,
    1.00000000f64 as c_float,
    0.67841888f64 as c_float,
    0.78872517f64 as c_float,
    1.00000000f64 as c_float,
    0.67745866f64 as c_float,
    0.78805526f64 as c_float,
    1.00000000f64 as c_float,
    0.67651284f64 as c_float,
    0.78739518f64 as c_float,
    1.00000000f64 as c_float,
    0.67558112f64 as c_float,
    0.78674472f64 as c_float,
    1.00000000f64 as c_float,
    0.67466317f64 as c_float,
    0.78610368f64 as c_float,
    1.00000000f64 as c_float,
    0.67375872f64 as c_float,
    0.78547186f64 as c_float,
    1.00000000f64 as c_float,
    0.67286748f64 as c_float,
    0.78484907f64 as c_float,
    1.00000000f64 as c_float,
    0.67198916f64 as c_float,
    0.78423512f64 as c_float,
    1.00000000f64 as c_float,
    0.67112350f64 as c_float,
    0.78362984f64 as c_float,
    1.00000000f64 as c_float,
    0.67027024f64 as c_float,
    0.78303305f64 as c_float,
    1.00000000f64 as c_float,
    0.66942911f64 as c_float,
    0.78244457f64 as c_float,
    1.00000000f64 as c_float,
    0.66859988f64 as c_float,
    0.78186425f64 as c_float,
    1.00000000f64 as c_float,
    0.66778228f64 as c_float,
    0.78129191f64 as c_float,
    1.00000000f64 as c_float,
    0.66697610f64 as c_float,
    0.78072740f64 as c_float,
    1.00000000f64 as c_float,
    0.66618110f64 as c_float,
    0.78017057f64 as c_float,
    1.00000000f64 as c_float,
    0.66539706f64 as c_float,
    0.77962127f64 as c_float,
    1.00000000f64 as c_float,
    0.66462376f64 as c_float,
    0.77907934f64 as c_float,
    1.00000000f64 as c_float,
    0.66386098f64 as c_float,
    0.77854465f64 as c_float,
    1.00000000f64 as c_float,
    0.66310852f64 as c_float,
    0.77801705f64 as c_float,
    1.00000000f64 as c_float,
    0.66236618f64 as c_float,
    0.77749642f64 as c_float,
    1.00000000f64 as c_float,
    0.66163375f64 as c_float,
    0.77698261f64 as c_float,
    1.00000000f64 as c_float,
    0.66091106f64 as c_float,
    0.77647551f64 as c_float,
    1.00000000f64 as c_float,
    0.66019791f64 as c_float,
    0.77597498f64 as c_float,
    1.00000000f64 as c_float,
    0.65949412f64 as c_float,
    0.77548090f64 as c_float,
    1.00000000f64 as c_float,
    0.65879952f64 as c_float,
    0.77499315f64 as c_float,
    1.00000000f64 as c_float,
    0.65811392f64 as c_float,
    0.77451161f64 as c_float,
    1.00000000f64 as c_float,
    0.65743716f64 as c_float,
    0.77403618f64 as c_float,
    1.00000000f64 as c_float,
    0.65676908f64 as c_float,
    0.77356673f64 as c_float,
    1.00000000f64 as c_float,
    0.65610952f64 as c_float,
    0.77310316f64 as c_float,
    1.00000000f64 as c_float,
    0.65545831f64 as c_float,
    0.77264537f64 as c_float,
    1.00000000f64 as c_float,
    0.65481530f64 as c_float,
    0.77219324f64 as c_float,
    1.00000000f64 as c_float,
    0.65418036f64 as c_float,
    0.77174669f64 as c_float,
    1.00000000f64 as c_float,
    0.65355332f64 as c_float,
    0.77130560f64 as c_float,
    1.00000000f64 as c_float,
    0.65293404f64 as c_float,
    0.77086988f64 as c_float,
    1.00000000f64 as c_float,
    0.65232240f64 as c_float,
    0.77043944f64 as c_float,
    1.00000000f64 as c_float,
    0.65171824f64 as c_float,
    0.77001419f64 as c_float,
    1.00000000f64 as c_float,
    0.65112144f64 as c_float,
    0.76959404f64 as c_float,
    1.00000000f64 as c_float,
    0.65053187f64 as c_float,
    0.76917889f64 as c_float,
    1.00000000f64 as c_float,
    0.64994941f64 as c_float,
    0.76876866f64 as c_float,
    1.00000000f64 as c_float,
    0.64937392f64 as c_float,
    0.76836326f64 as c_float,
    1.00000000f64 as c_float,
    0.64880528f64 as c_float,
    0.76796263f64 as c_float,
    1.00000000f64 as c_float,
    0.64824339f64 as c_float,
    0.76756666f64 as c_float,
    1.00000000f64 as c_float,
    0.64768812f64 as c_float,
    0.76717529f64 as c_float,
    1.00000000f64 as c_float,
    0.64713935f64 as c_float,
    0.76678844f64 as c_float,
    1.00000000f64 as c_float,
    0.64659699f64 as c_float,
    0.76640603f64 as c_float,
    1.00000000f64 as c_float,
    0.64606092f64 as c_float,
    0.76602798f64 as c_float,
    1.00000000f64 as c_float,
    0.64553103f64 as c_float,
    0.76565424f64 as c_float,
    1.00000000f64 as c_float,
    0.64500722f64 as c_float,
    0.76528472f64 as c_float,
    1.00000000f64 as c_float,
    0.64448939f64 as c_float,
    0.76491935f64 as c_float,
    1.00000000f64 as c_float,
    0.64397745f64 as c_float,
    0.76455808f64 as c_float,
    1.00000000f64 as c_float,
    0.64347129f64 as c_float,
    0.76420082f64 as c_float,
    1.00000000f64 as c_float,
    0.64297081f64 as c_float,
    0.76384753f64 as c_float,
    1.00000000f64 as c_float,
    0.64247594f64 as c_float,
    0.76349813f64 as c_float,
    1.00000000f64 as c_float,
    0.64198657f64 as c_float,
    0.76315256f64 as c_float,
    1.00000000f64 as c_float,
    0.64150261f64 as c_float,
    0.76281076f64 as c_float,
    1.00000000f64 as c_float,
    0.64102399f64 as c_float,
    0.76247267f64 as c_float,
    1.00000000f64 as c_float,
    0.64055061f64 as c_float,
    0.76213824f64 as c_float,
    1.00000000f64 as c_float,
    0.64008239f64 as c_float,
    0.76180740f64 as c_float,
    1.00000000f64 as c_float,
    0.63961926f64 as c_float,
    0.76148010f64 as c_float,
    1.00000000f64 as c_float,
    0.63916112f64 as c_float,
    0.76115628f64 as c_float,
    1.00000000f64 as c_float,
    0.63870790f64 as c_float,
    0.76083590f64 as c_float,
    1.00000000f64 as c_float,
    0.63825953f64 as c_float,
    0.76051890f64 as c_float,
    1.00000000f64 as c_float,
    0.63781592f64 as c_float,
    0.76020522f64 as c_float,
    1.00000000f64 as c_float,
    0.63737701f64 as c_float,
    0.75989482f64 as c_float,
    1.00000000f64 as c_float,
    0.63694273f64 as c_float,
    0.75958764f64 as c_float,
    1.00000000f64 as c_float,
    0.63651299f64 as c_float,
    0.75928365f64 as c_float,
    1.00000000f64 as c_float,
    0.63608774f64 as c_float,
    0.75898278f64 as c_float,
    1.00000000f64 as c_float,
    0.63566691f64 as c_float,
    0.75868499f64 as c_float,
    1.00000000f64 as c_float,
    0.63525042f64 as c_float,
    0.75839025f64 as c_float,
    1.00000000f64 as c_float,
    0.63483822f64 as c_float,
    0.75809849f64 as c_float,
    1.00000000f64 as c_float,
    0.63443023f64 as c_float,
    0.75780969f64 as c_float,
    1.00000000f64 as c_float,
    0.63402641f64 as c_float,
    0.75752379f64 as c_float,
    1.00000000f64 as c_float,
    0.63362667f64 as c_float,
    0.75724075f64 as c_float,
    1.00000000f64 as c_float,
    0.63323097f64 as c_float,
    0.75696053f64 as c_float,
    1.00000000f64 as c_float,
    0.63283925f64 as c_float,
    0.75668310f64 as c_float,
    1.00000000f64 as c_float,
    0.63245144f64 as c_float,
    0.75640840f64 as c_float,
    1.00000000f64 as c_float,
    0.63206749f64 as c_float,
    0.75613641f64 as c_float,
    1.00000000f64 as c_float,
    0.63168735f64 as c_float,
    0.75586707f64 as c_float,
    1.00000000f64 as c_float,
    0.63131096f64 as c_float,
    0.75560036f64 as c_float,
    1.00000000f64 as c_float,
    0.63093826f64 as c_float,
    0.75533624f64 as c_float,
    1.00000000f64 as c_float,
    0.63056920f64 as c_float,
    0.75507467f64 as c_float,
    1.00000000f64 as c_float,
    0.63020374f64 as c_float,
    0.75481562f64 as c_float,
    1.00000000f64 as c_float,
    0.62984181f64 as c_float,
    0.75455904f64 as c_float,
    1.00000000f64 as c_float,
    0.62948337f64 as c_float,
    0.75430491f64 as c_float,
    1.00000000f64 as c_float,
    0.62912838f64 as c_float,
    0.75405319f64 as c_float,
    1.00000000f64 as c_float,
    0.62877678f64 as c_float,
    0.75380385f64 as c_float,
    1.00000000f64 as c_float,
    0.62842852f64 as c_float,
    0.75355685f64 as c_float,
    1.00000000f64 as c_float,
    0.62808356f64 as c_float,
    0.75331217f64 as c_float,
    1.00000000f64 as c_float,
    0.62774186f64 as c_float,
    0.75306977f64 as c_float,
    1.00000000f64 as c_float,
    0.62740336f64 as c_float,
    0.75282962f64 as c_float,
    1.00000000f64 as c_float,
];

unsafe extern "C" fn interpolate_color(
    mut a: c_float,
    mut c1: *const c_float,
    mut c2: *const c_float,
    mut c: *mut c_float,
) {
    *c.offset(0 as c_int as isize) =
        ((1.0f64 - a as c_double) * *c1.offset(0 as c_int as isize) as c_double
            + (a * *c2.offset(0 as c_int as isize)) as c_double) as c_float;
    *c.offset(1 as c_int as isize) =
        ((1.0f64 - a as c_double) * *c1.offset(1 as c_int as isize) as c_double
            + (a * *c2.offset(1 as c_int as isize)) as c_double) as c_float;
    *c.offset(2 as c_int as isize) =
        ((1.0f64 - a as c_double) * *c1.offset(2 as c_int as isize) as c_double
            + (a * *c2.offset(2 as c_int as isize)) as c_double) as c_float;
}

#[no_mangle]
pub unsafe extern "C" fn colorramp_fill(
    mut gamma_r: *mut u16,
    mut gamma_g: *mut u16,
    mut gamma_b: *mut u16,
    mut size: c_int,
    mut setting: *const color_setting_t,
) {
    let mut white_point: [c_float; 3] = [0.; 3];
    let mut alpha: c_float =
        (((*setting).temperature % 100 as c_int) as c_double / 100.0f64) as c_float;
    let mut temp_index: c_int =
        ((*setting).temperature - 1000 as c_int) / 100 as c_int * 3 as c_int;
    interpolate_color(
        alpha,
        &*blackbody_color.as_ptr().offset(temp_index as isize),
        &*blackbody_color
            .as_ptr()
            .offset((temp_index + 3 as c_int) as isize),
        white_point.as_mut_ptr(),
    );
    let mut i: c_int = 0 as c_int;
    while i < size {
        *gamma_r.offset(i as isize) = ((*gamma_r.offset(i as isize) as c_double
            / (65535 as c_int + 1 as c_int) as c_double
            * (*setting).brightness as c_double
            * white_point[0 as c_int as usize] as c_double)
            .powf(1.0f64 / (*setting).gamma[0 as c_int as usize] as c_double)
            * (65535 as c_int + 1 as c_int) as f64) as u16;
        *gamma_g.offset(i as isize) =
            ((*gamma_g.offset(i as isize) as c_double / (65535 as c_int + 1 as c_int) as c_double
                * (*setting).brightness as c_double
                * white_point[1 as c_int as usize] as c_double)
                .powf(1.0f64 / (*setting).gamma[1 as c_int as usize] as c_double)
                * (65535 as c_int + 1 as c_int) as c_double) as u16;
        *gamma_b.offset(i as isize) =
            ((*gamma_b.offset(i as isize) as c_double / (65535 as c_int + 1 as c_int) as c_double
                * (*setting).brightness as c_double
                * white_point[2 as c_int as usize] as c_double)
                .powf(1.0f64 / (*setting).gamma[2 as c_int as usize] as c_double)
                * (65535 as c_int + 1 as c_int) as c_double) as u16;
        i += 1;
        i;
    }
}

#[no_mangle]
pub unsafe extern "C" fn colorramp_fill_float(
    mut gamma_r: *mut c_float,
    mut gamma_g: *mut c_float,
    mut gamma_b: *mut c_float,
    mut size: c_int,
    mut setting: *const color_setting_t,
) {
    let mut white_point: [c_float; 3] = [0.; 3];
    let mut alpha: c_float =
        (((*setting).temperature % 100 as c_int) as c_double / 100.0f64) as c_float;
    let mut temp_index: c_int =
        ((*setting).temperature - 1000 as c_int) / 100 as c_int * 3 as c_int;
    interpolate_color(
        alpha,
        &*blackbody_color.as_ptr().offset(temp_index as isize),
        &*blackbody_color
            .as_ptr()
            .offset((temp_index + 3 as c_int) as isize),
        white_point.as_mut_ptr(),
    );
    let mut i: c_int = 0 as c_int;
    while i < size {
        *gamma_r.offset(i as isize) = (*gamma_r.offset(i as isize) as c_double
            * (*setting).brightness as c_double
            * white_point[0 as c_int as usize] as c_double)
            .powf(1.0f64 / (*setting).gamma[0 as c_int as usize] as c_double)
            as f32;
        *gamma_g.offset(i as isize) = (*gamma_g.offset(i as isize) as c_double
            * (*setting).brightness as c_double
            * white_point[1 as c_int as usize] as c_double)
            .powf(1.0f64 / (*setting).gamma[1 as c_int as usize] as c_double)
            as f32;
        *gamma_b.offset(i as isize) = (*gamma_b.offset(i as isize) as c_double
            * (*setting).brightness as c_double
            * white_point[2 as c_int as usize] as c_double)
            .powf(1.0f64 / (*setting).gamma[2 as c_int as usize] as c_double)
            as f32;
        i += 1;
        i;
    }
}
